// tableau avec 0 pour chaque mois
const budgetParMois = new Array(labels.length).fill(0);

// RÃ©partition des heures par mois pour chaque budget
<% dependencies.budget.forEach(function(element) { %>
  (function() {
    const start = new Date("<%= element.dateStart %>");
    const end   = new Date("<%= element.dateEnd %>");
    const heures = <%= element.heure %>;

    const startLabel = `${moisLabels[start.getMonth() + 1]} ${start.getFullYear()}`;
    const endLabel   = `${moisLabels[end.getMonth() + 1]} ${end.getFullYear()}`;

    const startIndex = labels.indexOf(startLabel);
    const endIndex   = labels.indexOf(endLabel);

    if (startIndex >= 0 && endIndex >= 0) {
      const nbMois = endIndex - startIndex + 1;
      const heuresParMoisBudget = heures / nbMois;

      for (let i = startIndex; i <= endIndex; i++) {
        budgetParMois[i] += heuresParMoisBudget;
      }
    }
  })();
<% }) %>

// Transformer en cumul (escalier)
const budgetCumul = [];
budgetParMois.reduce((acc, val, i) => {
  const total = acc + val;
  budgetCumul[i] = total;
  return total;
}, 0);
