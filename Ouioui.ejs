const { exec } = require("child_process");
const path = require("path");
const fs = require("fs");

// Fonction pour exécuter ton script Python
function runPython(inputFile) {
  return new Promise((resolve, reject) => {
    const inputPath = path.resolve(inputFile); // chemin absolu du xls
    const inputDir = path.dirname(inputPath);
    const baseName = path.basename(inputPath, path.extname(inputPath)); // nom sans extension
    const csvName = `${baseName}.csv`;
    const csvPath = path.join(inputDir, csvName);

    // Commande python
    const cmd = `python ./b.py "${inputPath}" "Resultat"`;

    exec(cmd, (error, stdout, stderr) => {
      if (error) {
        console.error(`Erreur: ${error.message}`);
        return reject(error);
      }
      if (stderr) {
        console.error(`stderr: ${stderr}`);
      }

      // Maintenant on déplace le fichier généré
      const outputDir = path.resolve("upload/temp");
      if (!fs.existsSync(outputDir)) {
        fs.mkdirSync(outputDir, { recursive: true });
      }
      const destPath = path.join(outputDir, csvName);

      fs.rename(csvPath, destPath, (err) => {
        if (err) return reject(err);
        resolve(destPath);
      });
    });
  });
}

// Exemple d’utilisation
(async () => {
  try {
    const resultFile = await runPython("./a.xls");
    console.log("Fichier déplacé vers :", resultFile);
  } catch (err) {
    console.error("Erreur :", err);
  }
})();
