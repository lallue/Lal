<button id="toggleMode">Mode 1</button>
<canvas id="myChart"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const budgets = [];
  <% dependencies.budget.forEach(function (element) { %>
    budgets.push({
      start: new Date("<%= element.dateStart %>"),
      end: new Date("<%= element.dateEnd %>"),
      hours: <%= element.heure %>
    });
  <% }) %>;

  // labels déjà créés chez toi : ["janvier 2024", "février 2024", ...]
  const labels = [...];  

  // fonction pour calculer budget cumul en mode 1 ou 2
  function buildBudgetCumul(mode) {
    const budgetParMois = new Array(labels.length).fill(0);

    budgets.forEach(b => {
      const startLabel = `${moisLabels[b.start.getMonth() + 1]} ${b.start.getFullYear()}`;
      const endLabel   = `${moisLabels[b.end.getMonth() + 1]} ${b.end.getFullYear()}`;

      const si = labels.indexOf(startLabel);
      const ei = labels.indexOf(endLabel);

      if (si >= 0 && ei >= 0) {
        if (mode === 1) {
          // répartition par mois (entiers)
          const nbMois = (ei - si + 1);
          const base   = Math.floor(b.hours / nbMois);
          let reste    = b.hours % nbMois;

          for (let i = si; i <= ei; i++) {
            budgetParMois[i] += base + (reste > 0 ? 1 : 0);
            if (reste > 0) reste--;
          }
        } else if (mode === 2) {
          // ajout direct dès le mois de début
          budgetParMois[si] += b.hours;
        }
      }
    });

    // cumul
    const budgetCumul = [];
    budgetParMois.reduce((acc, v, i) => (budgetCumul[i] = acc + v), 0);
    return budgetCumul;
  }

  // initialisation en mode 1
  let currentMode = 1;
  const ctx = document.getElementById("myChart").getContext("2d");
  let chart = new Chart(ctx, {
    type: "line",
    data: {
      labels: labels,
      datasets: [{
        label: "Budget cumulatif",
        data: buildBudgetCumul(currentMode),
        stepped: true,
        borderColor: "green",
        fill: false
      }]
    },
    options: {
      scales: { y: { beginAtZero: true } }
    }
  });

  // toggle bouton
  document.getElementById("toggleMode").addEventListener("click", () => {
    currentMode = currentMode === 1 ? 2 : 1;
    document.getElementById("toggleMode").innerText = "Mode " + currentMode;

    chart.data.datasets[0].data = buildBudgetCumul(currentMode);
    chart.update();
  });
</script>
